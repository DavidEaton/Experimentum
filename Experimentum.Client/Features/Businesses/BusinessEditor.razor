@page "/business"
@using Experimentum.Shared.Features.Businesses;

<h1>Blazored FluentValidation Sample</h1>

<hr class="mb-5" />

<EditForm Model="@Business" OnSubmit="@SubmitFormAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" Options="@(options => options.IncludeAllRuleSets())" />
    @*     <ValidationSummary />
    *@
    <p>
        <label>Name: </label>
        <InputText @bind-Value="@Business.Name" />
        <ValidationMessage For="@(() => Business.Name)" />
    </p>

    <hr />

    <p>
        <label>Email Address: </label>
        <InputText @bind-Value="@Business.Email.Address" />
        <ValidationMessage For="@(() => Business.Email)" />
    </p>

    <button type="submit">Save</button>

</EditForm>
<br />
<button @onclick="PartialValidate">Partial Validation</button>

@code {
    private readonly BusinessRequest Business = new();
    private FluentValidationValidator? _fluentValidationValidator;

    private async Task SubmitFormAsync()
    {
        if (await _fluentValidationValidator!.ValidateAsync())
        {
            Console.WriteLine("Form Submitted Successfully!");
        }
    }

    private void PartialValidate()
        => Console.WriteLine($"Partial validation result : {_fluentValidationValidator?.Validate(options => options.IncludeAllRuleSets())}");
}